plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

allure {
    report {
        version.set("2.16.1")
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                // Defaults to allureJavaVersion
                adapterVersion.set("2.16.1")
                enabled.set(true)
                // Enables allure-junit4 default test listeners via META-INF/services/...
                autoconfigureListeners.set(true)
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:5.25.0",
            "org.junit.jupiter:junit-jupiter:5.8.1",
            'io.qameta.allure:allure-selenide:2.16.1',
            "org.aeonbits.owner:owner:1.0.12"
    )

    testRuntimeOnly (
            "org.junit.jupiter:junit-jupiter-engine:5.8.1",
            "org.slf4j:slf4j-simple:1.7.32"
    )
}

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

tasks.withType(Test){
    //    systemProperty("environment", System.getProperty("environment", "stage")) // preprod, prod

    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_tests(type: Test) {
    //systemProperty("browserSize", System.getProperty("browserSize", "400x400"))
    useJUnitPlatform {
        includeTags "properties"
    }
}

task form_tests(type: Test) {
    useJUnitPlatform {
        includeTags "form"
    }
}

task many_tags_tests(type: Test) {
    useJUnitPlatform {
        includeTags "properties"
        includeTags "smoke"
        excludeTags "prod"
    }
}
